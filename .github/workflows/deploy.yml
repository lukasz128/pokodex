# name: Deploy Develop

# on:
#   push:
#     branches:
#       - new-architecutre-for-client

# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v1

#       - name: Build the Docker image
#         run: docker build -t pokodex-dev-api:latest .

#       - name: Save Docker image
#         run: docker save pokodex-dev-api:latest > pokodex-dev-api.tar
#       - name: Save Docker image checksum
#         run: docker inspect --format='{{index .Id}}' lukasz128/pokodex > image_id.txt

#       - name: Push Docker image to VPS if diffrent
#         run: |
#           IMAGE_ID=$(cat image_id.txt)
#           REMOTE_IMAGE_ID=$(ssh -p 10258 -o StrictHostKeyChecking=no root@srv27.mikr.us 'docker inspect --format="{{index .Id}}" lukasz128/pokodex || echo "none"')
#           if ["$IMAGE_ID" != "$REMOTE_IMAGE_ID" ]; then
#             docker rmi $REMOTE_IMAGE_ID || true
#             docker save lukasz128/pokodex | bzip2 | ssh -o StrictHostKeyChecking=no root@srv27.mikr.us -p 10258 'bunzip2 | docker load'
#           else
#             echo "Images are the same"
#           fi

#       # - name: Push Docker image to VPS
#       #   run: |
#       #     docker save lukasz128/pokodex | bzip2 | ssh -o StrictHostKeyChecking=no root@srv27.mikr.us -p 10258 'bunzip2 | docker load'

#       - name: 'SCP to vps'
#         uses: appleboy/scp-action@master
#         with:
#           host: ${{ secrets.VPS_SSH_HOST }}
#           username: ${{ secrets.VPS_SSH_USER }}
#           key: ${{ secrets.VPS_SSH_KEY }}
#           port: ${{secrets.VPS_SSH_PORT }}
#           debug: true
#           source: 'pokodex-dev-api.tar'
#           target: '~/'

#       - name: Deploy on VPS
#         uses: appleboy/ssh-action@v0.1.6
#         with:
#           host: ${{ secrets.VPS_SSH_HOST }}
#           username: ${{ secrets.VPS_SSH_USER }}
#           key: ${{ secrets.VPS_SSH_KEY }}
#           port: ${{secrets.VPS_SSH_PORT}}
#           debug: true
#           script: |
#             docker load --input pokodex-dev-api.tar
#             docker image tag pokodex-dev-api:latest ${{secrets.VPS_IP}}/pokodex-dev-api:latest
#             docker push ${{secrets.VPS_IP}}/pokodex-dev-api:latest
#             docker pull ${{secrets.VPS_IP}}/pokodex-dev-api:latest
#             docker stop node_app || true
#             docker rm node_app || true
#             docker run -d --name node_app -p 3000:3333 ${{secrets.VPS_IP}}/pokodex-dev-api:latest
#             EOF
